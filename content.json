{"meta":{"title":"妙妙智慧屋","subtitle":null,"description":"我是一个好孩子","author":"Miao","url":"https://Jimi331492.github.io"},"pages":[{"title":"bangumi","date":"2021-07-19T19:13:05.000Z","updated":"2021-07-10T18:20:47.696Z","comments":false,"path":"bangumi/index.html","permalink":"https://Jimi331492.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"演示墙","date":"2021-07-10T18:14:16.000Z","updated":"2021-08-01T00:15:20.711Z","comments":false,"path":"demoWall/index.html","permalink":"https://Jimi331492.github.io/demoWall/index.html","excerpt":"","text":"","keywords":"演示墙"},{"title":"about","date":"2021-07-19T19:13:05.000Z","updated":"2021-07-31T23:21:23.489Z","comments":false,"path":"about/index.html","permalink":"https://Jimi331492.github.io/about/index.html","excerpt":"","text":"[さくら玅のMiao] 听&nbsp; Miao丶&nbsp; （ さくら玅の ） 表演中... bot_ui_ini()","keywords":"关于"},{"title":"donate","date":"2021-07-19T19:13:05.000Z","updated":"2021-07-10T18:19:36.524Z","comments":false,"path":"donate/index.html","permalink":"https://Jimi331492.github.io/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"comment","date":"2021-07-19T19:13:05.000Z","updated":"2021-07-10T18:19:54.921Z","comments":true,"path":"comment/index.html","permalink":"https://Jimi331492.github.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2021-07-10T18:14:16.000Z","updated":"2021-07-10T18:18:53.196Z","comments":false,"path":"lab/index.html","permalink":"https://Jimi331492.github.io/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2021-07-10T18:14:16.000Z","updated":"2021-07-31T21:28:16.595Z","comments":true,"path":"links/index.html","permalink":"https://Jimi331492.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"rss","date":"2021-07-10T18:14:16.000Z","updated":"2021-07-11T13:53:52.839Z","comments":true,"path":"rss/index.html","permalink":"https://Jimi331492.github.io/rss/index.html","excerpt":"","text":""},{"title":"music","date":"2021-07-10T18:14:16.000Z","updated":"2021-08-01T06:18:53.932Z","comments":true,"path":"music/index.html","permalink":"https://Jimi331492.github.io/music/index.html","excerpt":"","text":"雨的声音 摇滚不死","keywords":"喜欢的音乐"},{"title":"tags","date":"2021-07-10T18:14:16.000Z","updated":"2021-07-10T18:13:58.241Z","comments":true,"path":"tags/index.html","permalink":"https://Jimi331492.github.io/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2021-07-10T18:53:25.000Z","updated":"2021-07-10T18:14:10.480Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://Jimi331492.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"https://Jimi331492.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"电商管理后台说明文档","slug":"e_mS","date":"2021-08-01T00:33:53.187Z","updated":"2021-08-01T06:24:16.623Z","comments":false,"path":"2021/08/01/e_mS/","link":"","permalink":"https://Jimi331492.github.io/2021/08/01/e_mS/","excerpt":"","text":"e_managesystem一个基于Vue3+ElementUI Plus的电商后台管理系统项目预览点击预览功能用于管理用户账号，商品分类，商品信息，订单，数据统计等业务功能 开发模式电商后台管理系统整体采用前后端分离的开发模式,其中前端项目是基于Vue技术栈的SPA项目 项目技术栈 Vue3 Vue-router ElementUI Plus Axios Echarts 项目依赖运行依赖 axios =&gt; 发送请求 echarts =&gt; 数据可视化 lodash =&gt; js工具库,该项目用到深拷贝与对象合并 moment =&gt; 时间格式化处理工具库 nprogress =&gt; 进度条库 开发依赖 babel =&gt; es6+语法转换 eslint/babel-eslint =&gt; 语法检查 less/less-loader =&gt; less语法 babel-plugin-transform-remove-console =&gt; 移除console babel/plugin-syntax-dynamic-import =&gt; 将import 的写法自动转换为按需引入的方式 项目优化项目优化策略 生成打包报告通过命令行参数形式生成报告=&gt;vue-cli-service build –report通过可视化ui面板直接查看报告(通过控制台和分析面板) 通过vue.config.js修改webpack的默认配置 const externals = {vue:&#39;Vue&#39;} //需要从外部引入的依赖项，减小打包体积 // cdn的引用注意先后顺序，例 ElementUI Plus是基于Vue3开发的 必须先引用Vue再引用ElementUI Plus 不然会导致白屏，组件加载不出来 const cdn={ css:[url], js:[url] } module.exports = { //生产模式以./相对路径为根目录，不然打包部署后可能会导致白屏 publicPath: process.env.NODE_ENV === &#39;production&#39; ? &#39;./&#39; : &#39;/&#39;, outputDir: &#39;dist&#39; //打包后输出的文件夹名 //chain模式配置Webpack chainWebpack: config =&gt; { // 发布模式 config.when(process.env.NODE_ENV === &#39;production&#39;, config =&gt; { config .entry(&#39;app&#39;) .clear() .add(&#39;./src/main-prod.js&#39;) //配置不同的入口文件 config.externals(externals)// 配置从外部获取依赖项，减小打包体积 config.plugin(&#39;html&#39;).tap(args =&gt; { args[0].isProd = true //首页内容定制 args[0].cdn = cdn // 还需要再index.html中用&lt;link&gt;&lt;script&gt;forEach导入各个cdn文件 return args }) }) //开发模式 config.when(process.env.NODE_ENV === &#39;development&#39;, config =&gt; { config .entry(&#39;app&#39;) .clear() .add(&#39;./src/main-dev.js&#39;) config.plugin(&#39;html&#39;).tap(args =&gt; { args[0].isProd = false return args }) }) } } 为开发模式与发布模式指定不同的打包入口(在vue.config.js配置)开发模式入口文件 src/main-dev.js发布模式入口文件 src/main-prod.js 第三方库启用CDN在public/index.html文件头部,将main-prod中的已经进行配置的import(样式表)删除替换为cdn引入 首页内容定制 (在vue.config.js配置) 项目展示通过GitHub Page + 后端API公共接口 实现预览1.在GitHub里先创建一个库，并打开GitHub Page服务2.将打包生成的dist文件夹上传到GitHub里的库中3.输入网址即可查看 注意事项1.Vue项目中路由得用Hash模式，不然可能无法预览2.公共API得是Https，并开启Enforce HTTPS(在GitHub库里的Setting下的Page项最下面) 最后说明由于各种原因，所以没有单独的写后端，为了省钱也没有配置服务器来，所以此方法只能展示，预览项目但我觉得很香，这也算是我第一个项目了，经过这个项目，我学习到了很多，例如前后端分离开发，SPA单页面应用总结就是ElementUI Plus很强大，对于Vue我可能还需要一点时间来继续深入的理解","categories":[{"name":"文档","slug":"文档","permalink":"https://Jimi331492.github.io/categories/文档/"}],"tags":[{"name":"What","slug":"What","permalink":"https://Jimi331492.github.io/tags/What/"}],"keywords":[{"name":"文档","slug":"文档","permalink":"https://Jimi331492.github.io/categories/文档/"}]},{"title":"电商管理后台API接口文档","slug":"api接口文档","date":"2021-07-13T18:03:18.499Z","updated":"2021-08-01T06:11:24.384Z","comments":false,"path":"2021/07/14/api接口文档/","link":"","permalink":"https://Jimi331492.github.io/2021/07/14/api接口文档/","excerpt":"","text":"1. 电商管理后台 API 接口文档1.1. API V1 接口说明 接口基准地址：http://127.0.0.1:8888/api/private/v1/ 服务端已开启 CORS 跨域支持 API V1 认证统一使用 Token 认证 需要授权的 API ，必须在请求头中使用 Authorization 字段提供 token 令牌 使用 HTTP Status Code 标识状态 数据返回格式统一使用 JSON 1.1.1. 支持的请求方法 GET（SELECT）：从服务器取出资源（一项或多项）。 POST（CREATE）：在服务器新建一个资源。 PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。 PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。 DELETE（DELETE）：从服务器删除资源。 HEAD：获取资源的元数据。 OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。 1.1.2. 通用返回状态说明 状态码 含义 说明 200 OK 请求成功 201 CREATED 创建成功 204 DELETED 删除成功 400 BAD REQUEST 请求的地址不存在或者包含不支持的参数 401 UNAUTHORIZED 未授权 403 FORBIDDEN 被禁止访问 404 NOT FOUND 请求的资源不存在 422 Unprocesable entity [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误 500 INTERNAL SERVER ERROR 内部错误 1.2. 登录1.2.1. 登录验证接口 请求路径：login 请求方法：post 请求参数 参数名 参数说明 备注 username 用户名 不能为空 password 密码 不能为空 响应参数 参数名 参数说明 备注 id 用户 ID rid 用户角色 ID username 用户名 mobile 手机号 email 邮箱 token 令牌 基于 jwt 的令牌 响应数据 { &quot;data&quot;: { &quot;id&quot;: 500, &quot;rid&quot;: 0, &quot;username&quot;: &quot;admin&quot;, &quot;mobile&quot;: &quot;123&quot;, &quot;email&quot;: &quot;123@qq.com&quot;, &quot;token&quot;: &quot;Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjUwMCwicmlkIjowLCJpYXQiOjE1MTI1NDQyOTksImV4cCI6MTUxMjYzMDY5OX0.eGrsrvwHm-tPsO9r_pxHIQ5i5L1kX9RX444uwnRGaIM&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;登录成功&quot;, &quot;status&quot;: 200 } } 1.3. 用户管理1.3.1. 用户数据列表 请求路径：users 请求方法：get 请求参数 参数名 参数说明 备注 query 查询参数 可以为空 pagenum 当前页码 不能为空 pagesize 每页显示条数 不能为空 响应参数 参数名 参数说明 备注 totalpage 总记录数 pagenum 当前页码 users 用户数据集合 响应数据 { &quot;data&quot;: { &quot;totalpage&quot;: 5, &quot;pagenum&quot;: 4, &quot;users&quot;: [ { &quot;id&quot;: 25, &quot;username&quot;: &quot;tige117&quot;, &quot;mobile&quot;: &quot;18616358651&quot;, &quot;type&quot;: 1, &quot;email&quot;: &quot;tige112@163.com&quot;, &quot;create_time&quot;: &quot;2017-11-09T20:36:26.000Z&quot;, &quot;mg_state&quot;: true, // 当前用户的状态 &quot;role_name&quot;: &quot;炒鸡管理员&quot; } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.3.2. 添加用户 请求路径：users 请求方法：post 请求参数 参数名 参数说明 备注 username 用户名称 不能为空 password 用户密码 不能为空 email 邮箱 可以为空 mobile 手机号 可以为空 响应参数 参数名 参数说明 备注 id 用户 ID rid 用户角色 ID username 用户名 mobile 手机号 email 邮箱 响应数据 { &quot;data&quot;: { &quot;id&quot;: 28, &quot;username&quot;: &quot;tige1200&quot;, &quot;mobile&quot;: &quot;test&quot;, &quot;type&quot;: 1, &quot;openid&quot;: &quot;&quot;, &quot;email&quot;: &quot;test@test.com&quot;, &quot;create_time&quot;: &quot;2017-11-10T03:47:13.533Z&quot;, &quot;modify_time&quot;: null, &quot;is_delete&quot;: false, &quot;is_active&quot;: false }, &quot;meta&quot;: { &quot;msg&quot;: &quot;用户创建成功&quot;, &quot;status&quot;: 201 } } 1.3.3. 修改用户状态 请求路径：users/:uId/state/:type 请求方法：put 请求参数 参数名 参数说明 备注 uId 用户 ID 不能为空携带在url中 type 用户状态 不能为空携带在url中，值为 true 或者 false 响应数据 { &quot;data&quot;: { &quot;id&quot;: 566, &quot;rid&quot;: 30, &quot;username&quot;: &quot;admin&quot;, &quot;mobile&quot;: &quot;123456&quot;, &quot;email&quot;: &quot;bb@itcast.com&quot;, &quot;mg_state&quot;: 0 }, &quot;meta&quot;: { &quot;msg&quot;: &quot;设置状态成功&quot;, &quot;status&quot;: 200 } } 1.3.4. 根据 ID 查询用户信息 请求路径：users/:id 请求方法：get 请求参数 参数名 参数说明 备注 id 用户 ID 不能为空携带在url中 响应参数 参数名 参数说明 备注 id 用户 ID role_id 角色 ID mobile 手机号 email 邮箱 响应数据 { &quot;data&quot;: { &quot;id&quot;: 503, &quot;username&quot;: &quot;admin3&quot;, &quot;role_id&quot;: 0, &quot;mobile&quot;: &quot;00000&quot;, &quot;email&quot;: &quot;new@new.com&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;查询成功&quot;, &quot;status&quot;: 200 } } 1.3.5. 编辑用户提交 请求路径：users/:id 请求方法：put 请求参数 参数名 参数说明 备注 id 用户 id 不能为空 参数是url参数:id email 邮箱 可以为空 mobile 手机号 可以为空 响应参数 参数名 参数说明 备注 id 用户 ID role_id 角色 ID mobile 手机号 email 邮箱 响应数据 /* 200表示成功，500表示失败 */ { &quot;data&quot;: { &quot;id&quot;: 503, &quot;username&quot;: &quot;admin3&quot;, &quot;role_id&quot;: 0, &quot;mobile&quot;: &quot;111&quot;, &quot;email&quot;: &quot;123@123.com&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;更新成功&quot;, &quot;status&quot;: 200 } } 1.3.6. 删除单个用户 请求路径：users/:id 请求方法：delete 请求参数 参数名 参数说明 备注 id 用户 id 不能为空参数是url参数:id 响应参数 响应数据 { &quot;data&quot;: null, &quot;meta&quot;: { &quot;msg&quot;: &quot;删除成功&quot;, &quot;status&quot;: 200 } } 1.3.7. 分配用户角色 请求路径：users/:id/role 请求方法：put 请求参数 参数名 参数说明 备注 id 用户 ID 不能为空参数是url参数:id rid 角色 id 不能为空参数body参数 响应参数 参数名 参数说明 备注 id 用户 ID role_id 角色 ID mobile 手机号 email 邮箱 响应数据 { &quot;data&quot;: { &quot;id&quot;: 508, &quot;rid&quot;: &quot;30&quot;, &quot;username&quot;: &quot;asdf1&quot;, &quot;mobile&quot;: &quot;123123&quot;, &quot;email&quot;: &quot;adfsa@qq.com&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;设置角色成功&quot;, &quot;status&quot;: 200 } } 1.4. 权限管理1.4.1. 所有权限列表 请求路径：rights/:type 请求方法：get 请求参数 参数名 参数说明 备注 type 类型 值 list 或 tree , list 列表显示权限, tree 树状显示权限,参数是url参数:type 响应参数 参数名 参数说明 备注 id 权限 ID authName 权限说明 level 权限层级 pid 权限父 ID path 对应访问路径 响应数据 type=list { &quot;data&quot;: [ { &quot;id&quot;: 101, &quot;authName&quot;: &quot;商品管理&quot;, &quot;level&quot;: &quot;0&quot;, &quot;pid&quot;: 0, &quot;path&quot;: null }, { &quot;id&quot;: 102, &quot;authName&quot;: &quot;订单管理&quot;, &quot;level&quot;: &quot;0&quot;, &quot;pid&quot;: 0, &quot;path&quot;: null } ], &quot;meta&quot;: { &quot;msg&quot;: &quot;获取权限列表成功&quot;, &quot;status&quot;: 200 } } type=tree { data: [ { id: 101, authName: &#39;商品管理&#39;, path: null, pid: 0, children: [ { id: 104, authName: &#39;商品列表&#39;, path: null, pid: 101, children: [ { id: 105, authName: &#39;添加商品&#39;, path: null, pid: &#39;104,101&#39; } ] } ] } ], meta: { msg: &#39;获取权限列表成功&#39;, status: 200 } } 1.4.2. 左侧菜单权限 请求路径：menus 请求方法：get 响应数据 { &quot;data&quot;: { &quot;id&quot;: 101, &quot;authName&quot;: &quot;商品管理&quot;, &quot;path&quot;: null, &quot;children&quot;: [ { &quot;id&quot;: 104, &quot;authName&quot;: &quot;商品列表&quot;, &quot;path&quot;: null, &quot;children&quot;: [] } ] } &quot;meta&quot;: { &quot;msg&quot;: &quot;获取菜单列表成功&quot;, &quot;status&quot;: 200 } } 1.5. 角色管理1.5.1. 角色列表 请求路径：roles 请求方法：get 响应数据说明 第一层为角色信息 第二层开始为权限说明，权限一共有 3 层权限 最后一层权限，不包含 children 属性 响应数据 { &quot;data&quot;: [ { &quot;id&quot;: 30, &quot;roleName&quot;: &quot;主管&quot;, &quot;roleDesc&quot;: &quot;技术负责人&quot;, &quot;children&quot;: [ { &quot;id&quot;: 101, &quot;authName&quot;: &quot;商品管理&quot;, &quot;path&quot;: null, &quot;children&quot;: [ { &quot;id&quot;: 104, &quot;authName&quot;: &quot;商品列表&quot;, &quot;path&quot;: null, &quot;children&quot;: [ { &quot;id&quot;: 105, &quot;authName&quot;: &quot;添加商品&quot;, &quot;path&quot;: null } ] } ] } ] } ], &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.5.2. 添加角色 请求路径：roles 请求方法：post 请求参数 参数名 参数说明 备注 roleName 角色名称 不能为空 roleDesc 角色描述 可以为空 响应参数 参数名 参数说明 备注 roleId 角色 ID roleName 角色名称 roleDesc 角色描述 响应数据 { &quot;data&quot;: { &quot;roleId&quot;: 40, &quot;roleName&quot;: &quot;admin2&quot;, &quot;roleDesc&quot;: &quot;admin2Desc&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;创建成功&quot;, &quot;status&quot;: 201 } } 1.5.3. 根据 ID 查询角色 请求路径：roles/:id 请求方法：get 请求参数 参数名 参数说明 备注 :id 角色 ID 不能为空携带在url中 响应参数 参数名 参数说明 备注 roleId 角色 ID roleName 角色名称 roleDesc 角色描述 响应数据 { &quot;data&quot;: { &quot;roleId&quot;: 31, &quot;roleName&quot;: &quot;测试角色&quot;, &quot;roleDesc&quot;: &quot;测试负责人&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.5.4. 编辑提交角色 请求路径：roles/:id 请求方法：put 请求参数 参数名 参数说明 备注 :id 角色 ID 不能为空携带在url中 roleName 角色名称 不能为空 roleDesc 角色描述 可以为空 响应数据 { &quot;data&quot;: { &quot;roleId&quot;: 31, &quot;roleName&quot;: &quot;测试角色&quot;, &quot;roleDesc&quot;: &quot;测试角色描述&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.5.5. 删除角色 请求路径：roles/:id 请求方法：delete 请求参数 参数名 参数说明 备注 :id 角色 ID 不能为空携带在url中 响应数据 { &quot;data&quot;: null, &quot;meta&quot;: { &quot;msg&quot;: &quot;删除成功&quot;, &quot;status&quot;: 200 } } 1.5.6. 角色授权 请求路径：roles/:roleId/rights 请求方法：post 请求参数：通过 请求体 发送给后端 参数名 参数说明 备注 :roleId 角色 ID 不能为空携带在url中 rids 权限 ID 列表（字符串） 以 , 分割的权限 ID 列表（获取所有被选中、叶子节点的key和半选中节点的key, 包括 1，2，3级节点） 响应数据 { &quot;data&quot;: null, &quot;meta&quot;: { &quot;msg&quot;: &quot;更新成功&quot;, &quot;status&quot;: 200 } } 1.5.7. 删除角色指定权限 请求路径：roles/:roleId/rights/:rightId 请求方法：delete 请求参数 | 参数名 | 参数说明 | 备注 || ——– | ——– | ——————— || :roleId | 角色 ID | 不能为空携带在url中 || :rightId | 权限 ID | 不能为空携带在url中 | 响应数据说明 返回的data, 是当前角色下最新的权限数据 响应数据 { &quot;data&quot;: [ { &quot;id&quot;: 101, &quot;authName&quot;: &quot;商品管理&quot;, &quot;path&quot;: null, &quot;children&quot;: [ { &quot;id&quot;: 104, &quot;authName&quot;: &quot;商品列表&quot;, &quot;path&quot;: null, &quot;children&quot;: [ { &quot;id&quot;: 105, &quot;authName&quot;: &quot;添加商品&quot;, &quot;path&quot;: null }, { &quot;id&quot;: 116, &quot;authName&quot;: &quot;修改&quot;, &quot;path&quot;: null } ] } ] } ], &quot;meta&quot;: { &quot;msg&quot;: &quot;取消权限成功&quot;, &quot;status&quot;: 200 } } 1.6. 商品分类管理1.6.1. 商品分类数据列表 请求路径：categories 请求方法：get 请求参数 参数名 参数说明 备注 type [1,2,3] 值：1，2，3 分别表示显示一层二层三层分类列表【可选参数】如果不传递，则默认获取所有级别的分类 pagenum 当前页码值 【可选参数】如果不传递，则默认获取所有分类 pagesize 每页显示多少条数据 【可选参数】如果不传递，则默认获取所有分类 响应参数 参数名 参数说明 备注 cat_id 分类 ID cat_name 分类名称 cat_pid 分类父 ID cat_level 分类当前层级 响应数据 { &quot;data&quot;: [ { &quot;cat_id&quot;: 1, &quot;cat_name&quot;: &quot;大家电&quot;, &quot;cat_pid&quot;: 0, &quot;cat_level&quot;: 0, &quot;cat_deleted&quot;: false, &quot;children&quot;: [ { &quot;cat_id&quot;: 3, &quot;cat_name&quot;: &quot;电视&quot;, &quot;cat_pid&quot;: 1, &quot;cat_level&quot;: 1, &quot;cat_deleted&quot;: false, &quot;children&quot;: [ { &quot;cat_id&quot;: 6, &quot;cat_name&quot;: &quot;曲面电视&quot;, &quot;cat_pid&quot;: 3, &quot;cat_level&quot;: 2, &quot;cat_deleted&quot;: false }, { &quot;cat_id&quot;: 7, &quot;cat_name&quot;: &quot;海信&quot;, &quot;cat_pid&quot;: 3, &quot;cat_level&quot;: 2, &quot;cat_deleted&quot;: false } ] } ] } ], &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.6.2. 添加分类 请求路径：categories 请求方法：post 请求参数 参数名 参数说明 备注 cat_pid 分类父 ID 不能为空，如果要添加1级分类，则父分类Id应该设置为 0 cat_name 分类名称 不能为空 cat_level 分类层级 不能为空，0表示一级分类；1表示二级分类；2表示三级分类 响应数据 { &quot;data&quot;: { &quot;cat_id&quot;: 62, &quot;cat_name&quot;: &quot;相框&quot;, &quot;cat_pid&quot;: &quot;1&quot;, &quot;cat_level&quot;: &quot;1&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;创建成功&quot;, &quot;status&quot;: 201 } } 1.6.3. 根据 id 查询分类 请求路径：categories/:id 请求方法：get 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 响应数据 { &quot;data&quot;: { &quot;cat_id&quot;: 3, &quot;cat_name&quot;: &quot;厨卫电器&quot;, &quot;cat_pid&quot;: 0, &quot;cat_level&quot;: 0 }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.6.4. 编辑提交分类 请求路径：categories/:id 请求方法：put 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 cat_name 分类名称 不能为空【此参数，放到请求体中】 响应数据 { &quot;data&quot;: { &quot;cat_id&quot;: 22, &quot;cat_name&quot;: &quot;自拍杆&quot;, &quot;cat_pid&quot;: 7, &quot;cat_level&quot;: 2 }, &quot;meta&quot;: { &quot;msg&quot;: &quot;更新成功&quot;, &quot;status&quot;: 200 } } 1.6.5. 删除分类 请求路径：categories/:id 请求方法：delete 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 响应数据 { &quot;data&quot;: null, &quot;meta&quot;: { &quot;msg&quot;: &quot;删除成功&quot;, &quot;status&quot;: 200 } } 1.7. 分类参数管理1.7.1. 参数列表 请求路径：categories/:id/attributes 请求方法：get 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 sel [only,many] 不能为空,通过 only 或 many 来获取分类静态参数还是动态参数 响应参数 参数名 参数说明 备注 attr_id 分类参数 ID attr_name 分类参数名称 cat_id 分类参数所属分类 attr_sel only:输入框(唯一) many:后台下拉列表/前台单选框 attr_write manual:手工录入 list:从列表选择 attr_vals 如果 attr_write:list,那么有值，该值以逗号分隔 响应数据 { &quot;data&quot;: [ { &quot;attr_id&quot;: 1, &quot;attr_name&quot;: &quot;cpu&quot;, &quot;cat_id&quot;: 22, &quot;attr_sel&quot;: &quot;only&quot;, &quot;attr_write&quot;: &quot;manual&quot;, &quot;attr_vals&quot;: &quot;ffff&quot; } ], &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.7.2. 添加动态参数或者静态属性 请求路径：categories/:id/attributes 请求方法：post 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 attr_name 参数名称 不能为空 attr_sel [only,many] 不能为空 attr_vals 如果是 many 就需要填写值的选项，以逗号分隔 【可选参数】 响应数据 { &quot;data&quot;: { &quot;attr_id&quot;: 44, &quot;attr_name&quot;: &quot;测试参数&quot;, &quot;cat_id&quot;: &quot;1&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;a,b,c&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;创建成功&quot;, &quot;status&quot;: 201 } } 1.7.3. 删除参数 请求路径： categories/:id/attributes/:attrid 请求方法：delete 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 :attrid 参数 ID 不能为空携带在url中 响应数据 { &quot;data&quot;: null, &quot;meta&quot;: { &quot;msg&quot;: &quot;删除成功&quot;, &quot;status&quot;: 200 } } 1.7.4. 根据 ID 查询参数 请求路径：categories/:id/attributes/:attrId 请求方法：get 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 :attrId 属性 ID 不能为空携带在url中 attr_sel [only,many] 不能为空 attr_vals 如果是 many 就需要填写值的选项，以逗号分隔 响应数据 { &quot;data&quot;: { &quot;attr_id&quot;: 1, &quot;attr_name&quot;: &quot;cpu&quot;, &quot;cat_id&quot;: 22, &quot;attr_sel&quot;: &quot;only&quot;, &quot;attr_write&quot;: &quot;manual&quot;, &quot;attr_vals&quot;: &quot;ffff&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.7.5. 编辑提交参数 请求路径：categories/:id/attributes/:attrId 请求方法：put 请求参数 参数名 参数说明 备注 :id 分类 ID 不能为空携带在url中 :attrId 属性 ID 不能为空携带在url中 attr_name 新属性的名字 不能为空，携带在请求体中 attr_sel 属性的类型[many或only] 不能为空，携带在请求体中 attr_vals 参数的属性值 可选参数，携带在请求体中 响应数据 { &quot;data&quot;: { &quot;attr_id&quot;: 9, &quot;attr_name&quot;: &quot;测试更新&quot;, &quot;cat_id&quot;: &quot;43&quot;, &quot;attr_sel&quot;: &quot;only&quot;, &quot;attr_write&quot;: &quot;manual&quot;, &quot;attr_vals&quot;: &quot;abc&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;更新成功&quot;, &quot;status&quot;: 200 } } 1.8. 商品管理1.8.1. 商品列表数据 请求路径：goods 请求方法：get 请求参数 参数名 参数说明 备注 query 查询参数 可以为空 pagenum 当前页码 不能为空 pagesize 每页显示条数 不能为空 响应参数 参数名 参数说明 备注 total 总共商品条数 pagenum 当前商品页数 goods_id 商品 ID goods_name 商品名称 goods_price 价格 goods_number 数量 goods_weight 重量 不能为空 goods_state 商品状态 商品状态 0: 未通过 1: 审核中 2: 已审核 add_time 添加时间 upd_time 更新时间 hot_mumber 热销品数量 is_promote 是否是热销品 响应数据 { &quot;data&quot;: { &quot;total&quot;: 50, &quot;pagenum&quot;: &quot;1&quot;, &quot;goods&quot;: [ { &quot;goods_id&quot;: 144, &quot;goods_name&quot;: &quot;asfdsd&quot;, &quot;goods_price&quot;: 1, &quot;goods_number&quot;: 1, &quot;goods_weight&quot;: 1, &quot;goods_state&quot;: null, &quot;add_time&quot;: 1512954923, &quot;upd_time&quot;: 1512954923, &quot;hot_mumber&quot;: 0, &quot;is_promote&quot;: false } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.8.2. 添加商品 请求路径：goods 请求方法：post 请求参数 参数名 参数说明 备注 goods_name 商品名称 不能为空 goods_cat 以为’,’分割的分类列表 不能为空 goods_price 价格 不能为空 goods_number 数量 不能为空 goods_weight 重量 不能为空 goods_introduce 介绍 可以为空 pics 上传的图片临时路径（对象） 可以为空 attrs 商品的参数（数组），包含 动态参数 和 静态属性 可以为空 请求数据 { &quot;goods_name&quot;:&quot;test_goods_name2&quot;, &quot;goods_cat&quot;: &quot;1,2,3&quot;, &quot;goods_price&quot;:20, &quot;goods_number&quot;:30, &quot;goods_weight&quot;:40, &quot;goods_introduce&quot;:&quot;abc&quot;, &quot;pics&quot;:[ {&quot;pic&quot;:&quot;/tmp_uploads/30f08d52c551ecb447277eae232304b8&quot;} ], &quot;attrs&quot;:[ { &quot;attr_id&quot;:15, &quot;attr_value&quot;:&quot;ddd&quot; }, { &quot;attr_id&quot;:15, &quot;attr_value&quot;:&quot;eee&quot; } ] } 响应参数 参数名 参数说明 备注 total 总共商品条数 pagenum 当前商品页数 goods_id 商品 ID goods_cat 以为’,’分割的分类列表 goods_name 商品名称 goods_price 价格 goods_number 数量 goods_weight 重量 不能为空 goods_state 商品状态 商品状态 0: 未通过 1: 审核中 2: 已审核 add_time 添加时间 upd_time 更新时间 hot_mumber 热销品数量 is_promote 是否是热销品 pics 上传的图片临时路径（对象） pics_id:图片 ID,goods_id:商品 ID,pics_big:大图,pics_mid:中图,pics_sma:小图 attrs 商品的参数（数组） goods_id:商品 ID,attr_value:当前商品的参数值,add_price:浮动价格,attr_vals:预定义的参数值,attr_sel:手动输入，还是单选, 响应数据 { &quot;data&quot;: { &quot;goods_id&quot;: 145, &quot;goods_name&quot;: &quot;test_goods_name2&quot;, &quot;goods_price&quot;: 20, &quot;cat_id&quot;: 1, &quot;goods_number&quot;: 30, &quot;goods_weight&quot;: 40, &quot;goods_introduce&quot;: &quot;abc&quot;, &quot;goods_big_logo&quot;: &quot;&quot;, &quot;goods_small_logo&quot;: &quot;&quot;, &quot;goods_state&quot;: 1, &quot;add_time&quot;: 1512962370, &quot;upd_time&quot;: 1512962370, &quot;hot_mumber&quot;: 0, &quot;is_promote&quot;: false, &quot;pics&quot;: [ { &quot;pics_id&quot;: 397, &quot;goods_id&quot;: 145, &quot;pics_big&quot;: &quot;uploads/goodspics/big_30f08d52c551ecb447277eae232304b8&quot;, &quot;pics_mid&quot;: &quot;uploads/goodspics/mid_30f08d52c551ecb447277eae232304b8&quot;, &quot;pics_sma&quot;: &quot;uploads/goodspics/sma_30f08d52c551ecb447277eae232304b8&quot; } ], &quot;attrs&quot;: [ { &quot;goods_id&quot;: 145, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;ddd&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; }, { &quot;goods_id&quot;: 145, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;eee&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;创建商品成功&quot;, &quot;status&quot;: 201 } } 1.8.3. 根据 ID 查询商品 请求路径：goods/:id 请求方法：get 请求参数 参数名 参数说明 备注 id 商品 ID 不能为空携带在url中 响应参数 参数名 参数说明 备注 total 总共商品条数 pagenum 当前商品页数 goods_id 商品 ID goods_name 商品名称 goods_price 价格 goods_number 数量 goods_weight 重量 不能为空 goods_state 商品状态 商品状态 0: 未通过 1: 审核中 2: 已审核 add_time 添加时间 upd_time 更新时间 hot_mumber 热销品数量 is_promote 是否是热销品 pics 上传的图片临时路径（对象） pics_id:图片 ID,goods_id:商品 ID,pics_big:大图,pics_mid:中图,pics_sma:小图 attrs 商品的参数（数组） goods_id:商品 ID,attr_value:当前商品的参数值,add_price:浮动价格,attr_vals:预定义的参数值,attr_sel:手动输入，还是单选, 响应数据 { &quot;data&quot;: { &quot;goods_id&quot;: 145, &quot;goods_name&quot;: &quot;test_goods_name2&quot;, &quot;goods_price&quot;: 20, &quot;goods_number&quot;: 30, &quot;goods_weight&quot;: 40, &quot;goods_introduce&quot;: &quot;abc&quot;, &quot;goods_big_logo&quot;: &quot;&quot;, &quot;goods_small_logo&quot;: &quot;&quot;, &quot;goods_state&quot;: 1, &quot;add_time&quot;: 1512962370, &quot;upd_time&quot;: 1512962370, &quot;hot_mumber&quot;: 0, &quot;is_promote&quot;: false, &quot;pics&quot;: [ { &quot;pics_id&quot;: 397, &quot;goods_id&quot;: 145, &quot;pics_big&quot;: &quot;uploads/goodspics/big_30f08d52c551ecb447277eae232304b8&quot;, &quot;pics_mid&quot;: &quot;uploads/goodspics/mid_30f08d52c551ecb447277eae232304b8&quot;, &quot;pics_sma&quot;: &quot;uploads/goodspics/sma_30f08d52c551ecb447277eae232304b8&quot; } ], &quot;attrs&quot;: [ { &quot;goods_id&quot;: 145, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;ddd&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; }, { &quot;goods_id&quot;: 145, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;eee&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;创建商品成功&quot;, &quot;status&quot;: 201 } } 1.8.4. 编辑提交商品 请求路径：goods/:id 请求方法：put 请求参数 参数名 参数说明 备注 id 商品 ID 不能为空携带在url中 goods_name 商品名称 不能为空 goods_price 价格 不能为空 goods_number 数量 不能为空 goods_weight 重量 不能为空 goods_introduce 介绍 可以为空 pics 上传的图片临时路径（对象） 可以为空 attrs 商品的参数（数组） 可以为空 请求数据 { &quot;goods_name&quot;:&quot;test_goods_name2&quot;, &quot;goods_price&quot;:20, &quot;goods_number&quot;:30, &quot;goods_weight&quot;:40, &quot;goods_introduce&quot;:&quot;abc&quot;, &quot;pics&quot;:[ {&quot;pic&quot;:&quot;/tmp_uploads/30f08d52c551ecb447277eae232304b8&quot;} ], &quot;attrs&quot;:[ { &quot;attr_id&quot;:15, &quot;attr_value&quot;:&quot;ddd&quot; }, { &quot;attr_id&quot;:15, &quot;attr_value&quot;:&quot;eee&quot; } ] } 响应参数 参数名 参数说明 备注 total 总共商品条数 pagenum 当前商品页数 goods_id 商品 ID goods_name 商品名称 goods_price 价格 goods_number 数量 goods_weight 重量 不能为空 goods_state 商品状态 商品状态 0: 未通过 1: 审核中 2: 已审核 add_time 添加时间 upd_time 更新时间 hot_mumber 热销品数量 is_promote 是否是热销品 pics 上传的图片临时路径（对象） pics_id:图片 ID,goods_id:商品 ID,pics_big:大图,pics_mid:中图,pics_sma:小图 attrs 商品的参数（数组） goods_id:商品 ID,attr_value:当前商品的参数值,add_price:浮动价格,attr_vals:预定义的参数值,attr_sel:手动输入，还是单选, 响应数据 { &quot;data&quot;: { &quot;goods_id&quot;: 145, &quot;goods_name&quot;: &quot;test_goods_name2&quot;, &quot;goods_price&quot;: 20, &quot;goods_number&quot;: 30, &quot;goods_weight&quot;: 40, &quot;goods_introduce&quot;: &quot;abc&quot;, &quot;goods_big_logo&quot;: &quot;&quot;, &quot;goods_small_logo&quot;: &quot;&quot;, &quot;goods_state&quot;: 1, &quot;add_time&quot;: 1512962370, &quot;upd_time&quot;: 1512962370, &quot;hot_mumber&quot;: 0, &quot;is_promote&quot;: false, &quot;pics&quot;: [ { &quot;pics_id&quot;: 397, &quot;goods_id&quot;: 145, &quot;pics_big&quot;: &quot;uploads/goodspics/big_30f08d52c551ecb447277eae232304b8&quot;, &quot;pics_mid&quot;: &quot;uploads/goodspics/mid_30f08d52c551ecb447277eae232304b8&quot;, &quot;pics_sma&quot;: &quot;uploads/goodspics/sma_30f08d52c551ecb447277eae232304b8&quot; } ], &quot;attrs&quot;: [ { &quot;goods_id&quot;: 145, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;ddd&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; }, { &quot;goods_id&quot;: 145, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;eee&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;创建商品成功&quot;, &quot;status&quot;: 201 } } 1.8.5. 删除商品 请求路径：goods/:id 请求方法：delete 请求参数 参数名 参数说明 备注 id 商品 ID 不能为空携带在url中 响应数据 { &quot;data&quot;: null, &quot;meta&quot;: { &quot;msg&quot;: &quot;删除成功&quot;, &quot;status&quot;: 200 } } ###同步商品图片 请求路径：goods/:id/pics 请求方法：put 请求参数 参数名 参数说明 备注 id 商品 ID 不能为空携带在url中 pics 商品图片集合 如果有 pics_id 字段会保留该图片，如果没有 pics_id 但是有 pic 字段就会新生成图片数据 请求数据 ;[ { pic: &#39;tmp_uploads/db28f6316835836e97653b5c75e418be.png&#39; }, { pics_id: 397, goods_id: 145, pics_big: &#39;uploads/goodspics/big_30f08d52c551ecb447277eae232304b8&#39;, pics_mid: &#39;uploads/goodspics/mid_30f08d52c551ecb447277eae232304b8&#39;, pics_sma: &#39;uploads/goodspics/sma_30f08d52c551ecb447277eae232304b8&#39; } ] 响应数据 { &quot;data&quot;: { &quot;goods_id&quot;: 96, &quot;goods_name&quot;: &quot;iphoneXX&quot;, &quot;goods_price&quot;: 2, &quot;goods_number&quot;: 22, &quot;goods_weight&quot;: 22, &quot;goods_introduce&quot;: null, &quot;goods_big_logo&quot;: &quot;./uploads/goods/20171113/483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;, &quot;goods_small_logo&quot;: &quot;./uploads/goods/20171113/small_483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;, &quot;goods_state&quot;: 0, &quot;is_del&quot;: &quot;1&quot;, &quot;add_time&quot;: 1510045904, &quot;upd_time&quot;: 1512635159, &quot;delete_time&quot;: 1512635159, &quot;hot_mumber&quot;: 0, &quot;is_promote&quot;: false, &quot;pics&quot;: [ { &quot;pics_id&quot;: 383, &quot;goods_id&quot;: 96, &quot;pics_big&quot;: &quot;uploads/goodspics/big_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;, &quot;pics_mid&quot;: &quot;uploads/goodspics/mid_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;, &quot;pics_sma&quot;: &quot;uploads/goodspics/sma_6f5750132abd3f5b2b93dd722fcde653.jpg&quot; } ], &quot;attrs&quot;: [ { &quot;goods_id&quot;: 96, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;eee&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; }, { &quot;goods_id&quot;: 96, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;ddd&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;更新成功&quot;, &quot;status&quot;: 200 } } ###同步商品属性 请求路径：goods/:id/attributes 请求方法：put 请求参数 参数名 参数说明 备注 id 商品 ID 不能为空携带在url中 请求数据 ;[ { attr_id: 15, attr_value: &#39;ddd&#39; }, { attr_id: 15, attr_value: &#39;eee&#39; } ] 响应数据 { &quot;data&quot;: { &quot;goods_id&quot;: 96, &quot;goods_name&quot;: &quot;iphoneXX&quot;, &quot;goods_price&quot;: 2, &quot;goods_number&quot;: 22, &quot;goods_weight&quot;: 22, &quot;goods_introduce&quot;: null, &quot;goods_big_logo&quot;: &quot;./uploads/goods/20171113/483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;, &quot;goods_small_logo&quot;: &quot;./uploads/goods/20171113/small_483a3b8e99e534ec3e4312dbbaee7c9d.jpg&quot;, &quot;goods_state&quot;: 0, &quot;is_del&quot;: &quot;1&quot;, &quot;add_time&quot;: 1510045904, &quot;upd_time&quot;: 1512635159, &quot;delete_time&quot;: 1512635159, &quot;hot_mumber&quot;: 0, &quot;is_promote&quot;: false, &quot;pics&quot;: [ { &quot;pics_id&quot;: 383, &quot;goods_id&quot;: 96, &quot;pics_big&quot;: &quot;uploads/goodspics/big_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;, &quot;pics_mid&quot;: &quot;uploads/goodspics/mid_6f5750132abd3f5b2b93dd722fcde653.jpg&quot;, &quot;pics_sma&quot;: &quot;uploads/goodspics/sma_6f5750132abd3f5b2b93dd722fcde653.jpg&quot; } ], &quot;attrs&quot;: [ { &quot;goods_id&quot;: 96, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;eee&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; }, { &quot;goods_id&quot;: 96, &quot;attr_id&quot;: 15, &quot;attr_value&quot;: &quot;ddd&quot;, &quot;add_price&quot;: null, &quot;attr_name&quot;: &quot;fffffff&quot;, &quot;attr_sel&quot;: &quot;many&quot;, &quot;attr_write&quot;: &quot;list&quot;, &quot;attr_vals&quot;: &quot;&quot; } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;更新成功&quot;, &quot;status&quot;: 200 } } ###商品图片处理必须安装 GraphicsMagick linux apt-get install GraphicsMagick Mac OS X brew install GraphicsMagick Windows 点击下载 1.9. 图片上传 请求路径：upload 请求方法：post 请求参数 参数名 参数说明 备注 file 上传文件 响应数据 { &quot;data&quot;: { &quot;tmp_path&quot;: &quot;tmp_uploads/ccfc5179a914e94506bcbb7377e8985f.png&quot;, &quot;url&quot;: &quot;http://127.0.0.1:8888tmp_uploads/ccfc5179a914e94506bcbb7377e8985f.png&quot; }, &quot;meta&quot;: { &quot;msg&quot;: &quot;上传成功&quot;, &quot;status&quot;: 200 } } 1.10. 订单管理1.10.1. 订单数据列表 请求路径：orders 请求方法：get 请求参数 参数名 参数说明 备注 query 查询参数 可以为空 pagenum 当前页码 不能为空 pagesize 每页显示条数 不能为空 user_id 用户 ID 可以为空 pay_status 支付状态 可以为空 is_send 是否发货 可以为空 order_fapiao_title [‘个人’,’公司’] 可以为空 order_fapiao_company 公司名称 可以为空 order_fapiao_content 发票内容 可以为空 consignee_addr 发货地址 可以为空 响应数据 { &quot;data&quot;: { &quot;total&quot;: 1, &quot;pagenum&quot;: &quot;1&quot;, &quot;goods&quot;: [ { &quot;order_id&quot;: 47, &quot;user_id&quot;: 133, &quot;order_number&quot;: &quot;itcast-59e7502d7993d&quot;, &quot;order_price&quot;: 322, &quot;order_pay&quot;: &quot;1&quot;, &quot;is_send&quot;: &quot;是&quot;, &quot;trade_no&quot;: &quot;&quot;, &quot;order_fapiao_title&quot;: &quot;个人&quot;, &quot;order_fapiao_company&quot;: &quot;&quot;, &quot;order_fapiao_content&quot;: &quot;办公用品&quot;, &quot;consignee_addr&quot;: &quot;a:7:{s:6:\\&quot;cgn_id\\&quot;;i:1;s:7:\\&quot;user_id\\&quot;;i:133;s:8:\\&quot;cgn_name\\&quot;;s:9:\\&quot;王二柱\\&quot;;s:11:\\&quot;cgn_address\\&quot;;s:51:\\&quot;北京市海淀区苏州街长远天地大厦305室\\&quot;;s:7:\\&quot;cgn_tel\\&quot;;s:11:\\&quot;13566771298\\&quot;;s:8:\\&quot;cgn_code\\&quot;;s:6:\\&quot;306810\\&quot;;s:11:\\&quot;delete_time\\&quot;;N;}&quot;, &quot;pay_status&quot;: &quot;1&quot;, &quot;create_time&quot;: 1508331565, &quot;update_time&quot;: 1508331565 } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.10.2. 修改订单状态 请求路径：orders/:id 请求方法：put 请求参数 参数名 参数说明 备注 id 订单 ID 不能为空携带在url中 is_send 订单是否发货 1:已经发货，0:未发货 order_pay 订单支付 支付方式 0 未支付 1 支付宝 2 微信 3 银行卡 order_price 订单价格 order_number 订单数量 pay_status 支付状态 订单状态： 0 未付款、1 已付款 请求数据说明 所有请求数据都是增量更新，如果参数不填写，就不会更新该字段 响应数据 { &quot;data&quot;: { &quot;order_id&quot;: 67, &quot;user_id&quot;: 1, &quot;order_number&quot;: &quot;itcast-g7kmck71vjaujfgoi&quot;, &quot;order_price&quot;: 20, &quot;order_pay&quot;: &quot;0&quot;, &quot;is_send&quot;: &quot;否&quot;, &quot;trade_no&quot;: &quot;&quot;, &quot;order_fapiao_title&quot;: &quot;个人&quot;, &quot;order_fapiao_company&quot;: &quot;&quot;, &quot;order_fapiao_content&quot;: &quot;&quot;, &quot;consignee_addr&quot;: &quot;&quot;, &quot;pay_status&quot;: &quot;0&quot;, &quot;create_time&quot;: 1512533560, &quot;update_time&quot;: 1512533560, &quot;goods&quot;: [ { &quot;id&quot;: 82, &quot;order_id&quot;: 67, &quot;goods_id&quot;: 96, &quot;goods_price&quot;: 333, &quot;goods_number&quot;: 2, &quot;goods_total_price&quot;: 999 }, { &quot;id&quot;: 83, &quot;order_id&quot;: 67, &quot;goods_id&quot;: 95, &quot;goods_price&quot;: 666, &quot;goods_number&quot;: 5, &quot;goods_total_price&quot;: 999 } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.10.3. 查看订单详情 请求路径：orders/:id 请求方法：get 请求参数 参数名 参数说明 备注 id 订单 ID 不能为空携带在url中 响应数据 { &quot;data&quot;: { &quot;order_id&quot;: 67, &quot;user_id&quot;: 1, &quot;order_number&quot;: &quot;itcast-g7kmck71vjaujfgoi&quot;, &quot;order_price&quot;: 20, &quot;order_pay&quot;: &quot;0&quot;, &quot;is_send&quot;: &quot;否&quot;, &quot;trade_no&quot;: &quot;&quot;, &quot;order_fapiao_title&quot;: &quot;个人&quot;, &quot;order_fapiao_company&quot;: &quot;&quot;, &quot;order_fapiao_content&quot;: &quot;&quot;, &quot;consignee_addr&quot;: &quot;&quot;, &quot;pay_status&quot;: &quot;0&quot;, &quot;create_time&quot;: 1512533560, &quot;update_time&quot;: 1512533560, &quot;goods&quot;: [ { &quot;id&quot;: 82, &quot;order_id&quot;: 67, &quot;goods_id&quot;: 96, &quot;goods_price&quot;: 333, &quot;goods_number&quot;: 2, &quot;goods_total_price&quot;: 999 }, { &quot;id&quot;: 83, &quot;order_id&quot;: 67, &quot;goods_id&quot;: 95, &quot;goods_price&quot;: 666, &quot;goods_number&quot;: 5, &quot;goods_total_price&quot;: 999 } ] }, &quot;meta&quot;: { &quot;msg&quot;: &quot;获取成功&quot;, &quot;status&quot;: 200 } } 1.10.4. 修改地址 省市区/县联动效果 - 结合ElementUI的 el-cascader 组件 1.10.5. 查看物流信息 请求路径：/kuaidi/:id 请求方法：get 供测试的物流单号：1106975712662 响应数据： { &quot;data&quot;: [ { &quot;time&quot;: &quot;2018-05-10 09:39:00&quot;, &quot;ftime&quot;: &quot;2018-05-10 09:39:00&quot;, &quot;context&quot;: &quot;已签收,感谢使用顺丰,期待再次为您服务&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-10 08:23:00&quot;, &quot;ftime&quot;: &quot;2018-05-10 08:23:00&quot;, &quot;context&quot;: &quot;[北京市]北京海淀育新小区营业点派件员 顺丰速运 95338正在为您派件&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-10 07:32:00&quot;, &quot;ftime&quot;: &quot;2018-05-10 07:32:00&quot;, &quot;context&quot;: &quot;快件到达 [北京海淀育新小区营业点]&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-10 02:03:00&quot;, &quot;ftime&quot;: &quot;2018-05-10 02:03:00&quot;, &quot;context&quot;: &quot;快件在[北京顺义集散中心]已装车,准备发往 [北京海淀育新小区营业点]&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-09 23:05:00&quot;, &quot;ftime&quot;: &quot;2018-05-09 23:05:00&quot;, &quot;context&quot;: &quot;快件到达 [北京顺义集散中心]&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-09 21:21:00&quot;, &quot;ftime&quot;: &quot;2018-05-09 21:21:00&quot;, &quot;context&quot;: &quot;快件在[北京宝胜营业点]已装车,准备发往 [北京顺义集散中心]&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-09 13:07:00&quot;, &quot;ftime&quot;: &quot;2018-05-09 13:07:00&quot;, &quot;context&quot;: &quot;顺丰速运 已收取快件&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-09 12:25:03&quot;, &quot;ftime&quot;: &quot;2018-05-09 12:25:03&quot;, &quot;context&quot;: &quot;卖家发货&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-09 12:22:24&quot;, &quot;ftime&quot;: &quot;2018-05-09 12:22:24&quot;, &quot;context&quot;: &quot;您的订单将由HLA（北京海淀区清河中街店）门店安排发货。&quot;, &quot;location&quot;: &quot;&quot; }, { &quot;time&quot;: &quot;2018-05-08 21:36:04&quot;, &quot;ftime&quot;: &quot;2018-05-08 21:36:04&quot;, &quot;context&quot;: &quot;商品已经下单&quot;, &quot;location&quot;: &quot;&quot; } ], &quot;meta&quot;: { &quot;status&quot;: 200, &quot;message&quot;: &quot;获取物流信息成功！&quot; } } 1.11. 数据统计1.11.1. 基于时间统计的折线图 请求路径：reports/type/1 请求方法：get 响应数据 需要合并的选项 options: { title: { text: &#39;用户来源&#39; }, tooltip: { trigger: &#39;axis&#39;, axisPointer: { type: &#39;cross&#39;, label: { backgroundColor: &#39;#E9EEF3&#39; } } }, grid: { left: &#39;3%&#39;, right: &#39;4%&#39;, bottom: &#39;3%&#39;, containLabel: true }, xAxis: [ { boundaryGap: false } ], yAxis: [ { type: &#39;value&#39; } ] }","categories":[{"name":"文档","slug":"文档","permalink":"https://Jimi331492.github.io/categories/文档/"}],"tags":[{"name":"What","slug":"What","permalink":"https://Jimi331492.github.io/tags/What/"}],"keywords":[{"name":"文档","slug":"文档","permalink":"https://Jimi331492.github.io/categories/文档/"}]},{"title":"如何利用Hexo+github搭建一个博客","slug":"Hello Blog","date":"2021-07-12T16:47:52.889Z","updated":"2021-08-01T06:09:57.690Z","comments":true,"path":"2021/07/13/Hello Blog/","link":"","permalink":"https://Jimi331492.github.io/2021/07/13/Hello Blog/","excerpt":"","text":"如何利用Hexo+github搭建一个博客准备工作1.git的安装和配置2.node.js的安装配置3.注册GitHub4.申请一个域名 (非必要) 安装Hexo1.新建一个文件夹，用做博客本地根目录。2.点击鼠标右键，选择Git Bash3.输入： npm install hexo-cli -g hexo init --完成后会得到一个下面的目录结构 --node_modules --scaffolds --source 放博客内容源码 --themes 博客的主题 --.gitgnore --._config.yml ⭐配置文件 --package.json 在GitHub建立远程仓库1.在GitHub里Create a new repository 注意:仓库名命名格式一定是UserName+“github.io” 更改_config.yml文件配置 .#博客名字，显示在网站标题 title: 妙妙智慧屋 #⭐远程仓库地址 url: https://Username.github.io #⭐用git方式将本地仓库推送到远程仓库master分支上 deploy: type: git repo: github: https://github.com/Username/Username.github.io.git branch: master 恭喜你现在有自己的博客了在博客根目录下git bash输入即可查看 hexo g hexo s ##完成后在localhost:4000 ##推送至远程仓库 网址：https://username.github.io hexo clean &amp;&amp; hexo g &amp;&amp; hexo d #hexo clean 清除缓存 #hexo g 构建 #hexo d 推送至远端 本站主题Hexo Sakura使用教程&nbsp;请点击…","categories":[{"name":"技术","slug":"技术","permalink":"https://Jimi331492.github.io/categories/技术/"}],"tags":[{"name":"How","slug":"How","permalink":"https://Jimi331492.github.io/tags/How/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://Jimi331492.github.io/categories/技术/"}]},{"title":"Hexo Sakura使用教程","slug":"hexo-sakura","date":"2021-07-12T10:17:07.940Z","updated":"2021-08-01T06:10:30.017Z","comments":true,"path":"2021/07/12/hexo-sakura/","link":"","permalink":"https://Jimi331492.github.io/2021/07/12/hexo-sakura/","excerpt":"","text":"Hexo Sakura使用教程&nbsp;请点击","categories":[{"name":"转载","slug":"转载","permalink":"https://Jimi331492.github.io/categories/转载/"}],"tags":[{"name":"How","slug":"How","permalink":"https://Jimi331492.github.io/tags/How/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"https://Jimi331492.github.io/categories/转载/"}]},{"title":"该分类为空","slug":"none","date":"2021-07-12T10:10:18.872Z","updated":"2021-07-12T10:12:56.226Z","comments":true,"path":"2021/07/12/none/","link":"","permalink":"https://Jimi331492.github.io/2021/07/12/none/","excerpt":"","text":"","categories":[{"name":"生活","slug":"生活","permalink":"https://Jimi331492.github.io/categories/生活/"}],"tags":[{"name":"How","slug":"How","permalink":"https://Jimi331492.github.io/tags/How/"}],"keywords":[{"name":"生活","slug":"生活","permalink":"https://Jimi331492.github.io/categories/生活/"}]},{"title":"MD基本语法介绍","slug":"Hello md","date":"2021-07-11T04:13:41.708Z","updated":"2021-08-01T06:12:20.952Z","comments":true,"path":"2021/07/11/Hello md/","link":"","permalink":"https://Jimi331492.github.io/2021/07/11/Hello md/","excerpt":"","text":"Markdown基本语法介绍Markdown介绍&nbsp;&nbsp;&nbsp;&nbsp;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。由约翰·格鲁伯（英语：John Gruber）于2004创建。Markdown 文档后缀为 .md, .markdown。可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。 Markdown基本语法标题&nbsp;&nbsp;&nbsp;&nbsp;在想要设置为标题的文字前面加上#来表示。一个#是一级标题，两个#是二级标题，以此类推，最多到六级，和html中的h1-h6相同。示例： # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 效果如下 一级标题二级标题三级标题四级标题五级标题六级标题字体**加粗** *倾斜* ***加粗且倾斜*** ~~贯穿线~~ 效果如下加粗倾斜加粗且倾斜贯穿线 引用&gt;这是一段引用的话 &gt;&gt;这也是一段引用的话 效果如下 这是一段引用的话 这也是一段引用的话 分割线********** ------ _______ 效果如下 超链接[name](url) 示例:我的歌单 列表无序列表无序列表用 - + * 任何一种都可以 - 列表内容1 - 列表内容2 + 列表内容3 + 列表内容4 * 列表内容5 * 列表内容6 效果如下 列表内容1 列表内容2 列表内容3 列表内容4 列表内容5 列表内容6 有序列表有序列表就是数字加点就可以了 1.有序列表 2.有序列表 3.有序列表 效果如下 有序列表 有序列表 有序列表 代码块单行代码单行代码用两个反引号包裹起来就可以 `代码内容` 效果如下:代码内容 多行代码多行代码用六个反引号包裹起来 前面三个后面三个效果如下 多行代码 多行代码 多行代码 未完待续…","categories":[{"name":"技术","slug":"技术","permalink":"https://Jimi331492.github.io/categories/技术/"}],"tags":[{"name":"How","slug":"How","permalink":"https://Jimi331492.github.io/tags/How/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://Jimi331492.github.io/categories/技术/"}]}]}